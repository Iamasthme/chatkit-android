apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"
    defaultConfig {
        applicationId "com.pusher.chatkit"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

static def buildConfigStringFields(variant, Map<String, String> values) {
    def invalid = []
    values.forEach { name, key ->
        def value = properties.get(key) ?: System.getenv(key)
        if(value) {
            variant.buildConfigField "String", name, "\"$value\""
        } else {
            invalid += key
        }
    }
    if (!invalid.empty) {
        throw new StopActionException("Please set value(s) for ${invalid.join(", ")} in ~/.gradle/gradle.properties")
    }
}

android.applicationVariants.all { variant ->
    buildConfigStringFields(variant,
        [
            "INSTANCE_LOCATOR" : "pusher_instance_locator",
            "TOKEN_PROVIDER_ENDPOINT" : "pusher_token_provider_url",
            "USER_ID" : "pusher_user_name"
        ]
    )
}

dependencies {
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:design:27.0.2'
    implementation 'com.android.support:recyclerview-v7:27.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation project(':chatkit')
    implementation 'com.jakewharton:timber:4.5.1'
}
